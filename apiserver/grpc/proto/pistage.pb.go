// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: apiserver/grpc/proto/pistage.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SetVariablesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Variables map[string]string `protobuf:"bytes,2,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SetVariablesRequest) Reset() {
	*x = SetVariablesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiserver_grpc_proto_pistage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetVariablesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetVariablesRequest) ProtoMessage() {}

func (x *SetVariablesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_grpc_proto_pistage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetVariablesRequest.ProtoReflect.Descriptor instead.
func (*SetVariablesRequest) Descriptor() ([]byte, []int) {
	return file_apiserver_grpc_proto_pistage_proto_rawDescGZIP(), []int{0}
}

func (x *SetVariablesRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SetVariablesRequest) GetVariables() map[string]string {
	if x != nil {
		return x.Variables
	}
	return nil
}

type SetVariablesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Success bool   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *SetVariablesReply) Reset() {
	*x = SetVariablesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiserver_grpc_proto_pistage_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetVariablesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetVariablesReply) ProtoMessage() {}

func (x *SetVariablesReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_grpc_proto_pistage_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetVariablesReply.ProtoReflect.Descriptor instead.
func (*SetVariablesReply) Descriptor() ([]byte, []int) {
	return file_apiserver_grpc_proto_pistage_proto_rawDescGZIP(), []int{1}
}

func (x *SetVariablesReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SetVariablesReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetVariablesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetVariablesRequest) Reset() {
	*x = GetVariablesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiserver_grpc_proto_pistage_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVariablesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVariablesRequest) ProtoMessage() {}

func (x *GetVariablesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_grpc_proto_pistage_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVariablesRequest.ProtoReflect.Descriptor instead.
func (*GetVariablesRequest) Descriptor() ([]byte, []int) {
	return file_apiserver_grpc_proto_pistage_proto_rawDescGZIP(), []int{2}
}

func (x *GetVariablesRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetVariablesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Variables map[string]string `protobuf:"bytes,2,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetVariablesReply) Reset() {
	*x = GetVariablesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiserver_grpc_proto_pistage_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVariablesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVariablesReply) ProtoMessage() {}

func (x *GetVariablesReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_grpc_proto_pistage_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVariablesReply.ProtoReflect.Descriptor instead.
func (*GetVariablesReply) Descriptor() ([]byte, []int) {
	return file_apiserver_grpc_proto_pistage_proto_rawDescGZIP(), []int{3}
}

func (x *GetVariablesReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetVariablesReply) GetVariables() map[string]string {
	if x != nil {
		return x.Variables
	}
	return nil
}

type ApplyPistageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *ApplyPistageRequest) Reset() {
	*x = ApplyPistageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiserver_grpc_proto_pistage_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyPistageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyPistageRequest) ProtoMessage() {}

func (x *ApplyPistageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_grpc_proto_pistage_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyPistageRequest.ProtoReflect.Descriptor instead.
func (*ApplyPistageRequest) Descriptor() ([]byte, []int) {
	return file_apiserver_grpc_proto_pistage_proto_rawDescGZIP(), []int{4}
}

func (x *ApplyPistageRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ApplyPistageOnewayReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Success bool   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *ApplyPistageOnewayReply) Reset() {
	*x = ApplyPistageOnewayReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiserver_grpc_proto_pistage_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyPistageOnewayReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyPistageOnewayReply) ProtoMessage() {}

func (x *ApplyPistageOnewayReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_grpc_proto_pistage_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyPistageOnewayReply.ProtoReflect.Descriptor instead.
func (*ApplyPistageOnewayReply) Descriptor() ([]byte, []int) {
	return file_apiserver_grpc_proto_pistage_proto_rawDescGZIP(), []int{5}
}

func (x *ApplyPistageOnewayReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ApplyPistageOnewayReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ApplyPistageStreamReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Logtype int64  `protobuf:"varint,2,opt,name=logtype,proto3" json:"logtype,omitempty"`
	Log     string `protobuf:"bytes,3,opt,name=log,proto3" json:"log,omitempty"`
}

func (x *ApplyPistageStreamReply) Reset() {
	*x = ApplyPistageStreamReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiserver_grpc_proto_pistage_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyPistageStreamReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyPistageStreamReply) ProtoMessage() {}

func (x *ApplyPistageStreamReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_grpc_proto_pistage_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyPistageStreamReply.ProtoReflect.Descriptor instead.
func (*ApplyPistageStreamReply) Descriptor() ([]byte, []int) {
	return file_apiserver_grpc_proto_pistage_proto_rawDescGZIP(), []int{6}
}

func (x *ApplyPistageStreamReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ApplyPistageStreamReply) GetLogtype() int64 {
	if x != nil {
		return x.Logtype
	}
	return 0
}

func (x *ApplyPistageStreamReply) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

type GetPistageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetPistageRequest) Reset() {
	*x = GetPistageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiserver_grpc_proto_pistage_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPistageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPistageRequest) ProtoMessage() {}

func (x *GetPistageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_grpc_proto_pistage_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPistageRequest.ProtoReflect.Descriptor instead.
func (*GetPistageRequest) Descriptor() ([]byte, []int) {
	return file_apiserver_grpc_proto_pistage_proto_rawDescGZIP(), []int{7}
}

func (x *GetPistageRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetPistageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *GetPistageReply) Reset() {
	*x = GetPistageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiserver_grpc_proto_pistage_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPistageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPistageReply) ProtoMessage() {}

func (x *GetPistageReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_grpc_proto_pistage_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPistageReply.ProtoReflect.Descriptor instead.
func (*GetPistageReply) Descriptor() ([]byte, []int) {
	return file_apiserver_grpc_proto_pistage_proto_rawDescGZIP(), []int{8}
}

func (x *GetPistageReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetPistageReply) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type DeletePistageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeletePistageRequest) Reset() {
	*x = DeletePistageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiserver_grpc_proto_pistage_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePistageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePistageRequest) ProtoMessage() {}

func (x *DeletePistageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_grpc_proto_pistage_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePistageRequest.ProtoReflect.Descriptor instead.
func (*DeletePistageRequest) Descriptor() ([]byte, []int) {
	return file_apiserver_grpc_proto_pistage_proto_rawDescGZIP(), []int{9}
}

func (x *DeletePistageRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeletePistageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Success bool   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DeletePistageReply) Reset() {
	*x = DeletePistageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiserver_grpc_proto_pistage_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePistageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePistageReply) ProtoMessage() {}

func (x *DeletePistageReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_grpc_proto_pistage_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePistageReply.ProtoReflect.Descriptor instead.
func (*DeletePistageReply) Descriptor() ([]byte, []int) {
	return file_apiserver_grpc_proto_pistage_proto_rawDescGZIP(), []int{10}
}

func (x *DeletePistageReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeletePistageReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetRunsByPistageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Offset int64  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit  int64  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetRunsByPistageRequest) Reset() {
	*x = GetRunsByPistageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiserver_grpc_proto_pistage_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRunsByPistageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRunsByPistageRequest) ProtoMessage() {}

func (x *GetRunsByPistageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_grpc_proto_pistage_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRunsByPistageRequest.ProtoReflect.Descriptor instead.
func (*GetRunsByPistageRequest) Descriptor() ([]byte, []int) {
	return file_apiserver_grpc_proto_pistage_proto_rawDescGZIP(), []int{11}
}

func (x *GetRunsByPistageRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetRunsByPistageRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetRunsByPistageRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetRunsByPistageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Runs []*Run `protobuf:"bytes,2,rep,name=runs,proto3" json:"runs,omitempty"`
}

func (x *GetRunsByPistageReply) Reset() {
	*x = GetRunsByPistageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiserver_grpc_proto_pistage_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRunsByPistageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRunsByPistageReply) ProtoMessage() {}

func (x *GetRunsByPistageReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_grpc_proto_pistage_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRunsByPistageReply.ProtoReflect.Descriptor instead.
func (*GetRunsByPistageReply) Descriptor() ([]byte, []int) {
	return file_apiserver_grpc_proto_pistage_proto_rawDescGZIP(), []int{12}
}

func (x *GetRunsByPistageReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetRunsByPistageReply) GetRuns() []*Run {
	if x != nil {
		return x.Runs
	}
	return nil
}

type GetJobRunsByPistageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	RunID  string `protobuf:"bytes,2,opt,name=runID,proto3" json:"runID,omitempty"`
	Offset int64  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit  int64  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetJobRunsByPistageRequest) Reset() {
	*x = GetJobRunsByPistageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiserver_grpc_proto_pistage_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobRunsByPistageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobRunsByPistageRequest) ProtoMessage() {}

func (x *GetJobRunsByPistageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_grpc_proto_pistage_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobRunsByPistageRequest.ProtoReflect.Descriptor instead.
func (*GetJobRunsByPistageRequest) Descriptor() ([]byte, []int) {
	return file_apiserver_grpc_proto_pistage_proto_rawDescGZIP(), []int{13}
}

func (x *GetJobRunsByPistageRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetJobRunsByPistageRequest) GetRunID() string {
	if x != nil {
		return x.RunID
	}
	return ""
}

func (x *GetJobRunsByPistageRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetJobRunsByPistageRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetJobRunsByPistageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	RunID   string    `protobuf:"bytes,2,opt,name=runID,proto3" json:"runID,omitempty"`
	JobRuns []*JobRun `protobuf:"bytes,3,rep,name=jobRuns,proto3" json:"jobRuns,omitempty"`
}

func (x *GetJobRunsByPistageReply) Reset() {
	*x = GetJobRunsByPistageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiserver_grpc_proto_pistage_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobRunsByPistageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobRunsByPistageReply) ProtoMessage() {}

func (x *GetJobRunsByPistageReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_grpc_proto_pistage_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobRunsByPistageReply.ProtoReflect.Descriptor instead.
func (*GetJobRunsByPistageReply) Descriptor() ([]byte, []int) {
	return file_apiserver_grpc_proto_pistage_proto_rawDescGZIP(), []int{14}
}

func (x *GetJobRunsByPistageReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetJobRunsByPistageReply) GetRunID() string {
	if x != nil {
		return x.RunID
	}
	return ""
}

func (x *GetJobRunsByPistageReply) GetJobRuns() []*JobRun {
	if x != nil {
		return x.JobRuns
	}
	return nil
}

type RegisterJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *RegisterJobRequest) Reset() {
	*x = RegisterJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiserver_grpc_proto_pistage_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterJobRequest) ProtoMessage() {}

func (x *RegisterJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_grpc_proto_pistage_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterJobRequest.ProtoReflect.Descriptor instead.
func (*RegisterJobRequest) Descriptor() ([]byte, []int) {
	return file_apiserver_grpc_proto_pistage_proto_rawDescGZIP(), []int{15}
}

func (x *RegisterJobRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type RegisterJobReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Success bool   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *RegisterJobReply) Reset() {
	*x = RegisterJobReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiserver_grpc_proto_pistage_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterJobReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterJobReply) ProtoMessage() {}

func (x *RegisterJobReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_grpc_proto_pistage_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterJobReply.ProtoReflect.Descriptor instead.
func (*RegisterJobReply) Descriptor() ([]byte, []int) {
	return file_apiserver_grpc_proto_pistage_proto_rawDescGZIP(), []int{16}
}

func (x *RegisterJobReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegisterJobReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type RegisterStepRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *RegisterStepRequest) Reset() {
	*x = RegisterStepRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiserver_grpc_proto_pistage_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterStepRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterStepRequest) ProtoMessage() {}

func (x *RegisterStepRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_grpc_proto_pistage_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterStepRequest.ProtoReflect.Descriptor instead.
func (*RegisterStepRequest) Descriptor() ([]byte, []int) {
	return file_apiserver_grpc_proto_pistage_proto_rawDescGZIP(), []int{17}
}

func (x *RegisterStepRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type RegisterStepReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Success bool   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *RegisterStepReply) Reset() {
	*x = RegisterStepReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiserver_grpc_proto_pistage_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterStepReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterStepReply) ProtoMessage() {}

func (x *RegisterStepReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_grpc_proto_pistage_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterStepReply.ProtoReflect.Descriptor instead.
func (*RegisterStepReply) Descriptor() ([]byte, []int) {
	return file_apiserver_grpc_proto_pistage_proto_rawDescGZIP(), []int{18}
}

func (x *RegisterStepReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegisterStepReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type Run struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Pistage string                 `protobuf:"bytes,2,opt,name=Pistage,proto3" json:"Pistage,omitempty"`
	Start   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start,proto3" json:"start,omitempty"`
	End     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *Run) Reset() {
	*x = Run{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiserver_grpc_proto_pistage_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Run) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Run) ProtoMessage() {}

func (x *Run) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_grpc_proto_pistage_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Run.ProtoReflect.Descriptor instead.
func (*Run) Descriptor() ([]byte, []int) {
	return file_apiserver_grpc_proto_pistage_proto_rawDescGZIP(), []int{19}
}

func (x *Run) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Run) GetPistage() string {
	if x != nil {
		return x.Pistage
	}
	return ""
}

func (x *Run) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *Run) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

type JobRun struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Pistage string                 `protobuf:"bytes,2,opt,name=Pistage,proto3" json:"Pistage,omitempty"`
	Job     string                 `protobuf:"bytes,3,opt,name=job,proto3" json:"job,omitempty"`
	Status  string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Start   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=start,proto3" json:"start,omitempty"`
	End     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=end,proto3" json:"end,omitempty"`
	Log     string                 `protobuf:"bytes,7,opt,name=log,proto3" json:"log,omitempty"`
}

func (x *JobRun) Reset() {
	*x = JobRun{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiserver_grpc_proto_pistage_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobRun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobRun) ProtoMessage() {}

func (x *JobRun) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_grpc_proto_pistage_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobRun.ProtoReflect.Descriptor instead.
func (*JobRun) Descriptor() ([]byte, []int) {
	return file_apiserver_grpc_proto_pistage_proto_rawDescGZIP(), []int{20}
}

func (x *JobRun) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *JobRun) GetPistage() string {
	if x != nil {
		return x.Pistage
	}
	return ""
}

func (x *JobRun) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *JobRun) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *JobRun) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *JobRun) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *JobRun) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

var File_apiserver_grpc_proto_pistage_proto protoreflect.FileDescriptor

var file_apiserver_grpc_proto_pistage_proto_rawDesc = []byte{
	0x0a, 0x22, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x67, 0x72, 0x70, 0x63,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb0, 0x01, 0x0a,
	0x13, 0x53, 0x65, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x47, 0x0a, 0x09, 0x76, 0x61, 0x72, 0x69,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65,
	0x73, 0x1a, 0x3c, 0x0a, 0x0e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x41, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x22, 0x29, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xac, 0x01,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x45, 0x0a, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61,
	0x62, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x1a, 0x3c,
	0x0a, 0x0e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2f, 0x0a, 0x13,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x50, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x47, 0x0a,
	0x17, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x50, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x4f, 0x6e, 0x65,
	0x77, 0x61, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x59, 0x0a, 0x17, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x50,
	0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x67, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x6f,
	0x67, 0x22, 0x27, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3f, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x50, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x2a, 0x0a, 0x14, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x42, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x5b, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x52, 0x75, 0x6e, 0x73, 0x42, 0x79, 0x50, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x4b, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52,
	0x75, 0x6e, 0x73, 0x42, 0x79, 0x50, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x72, 0x75, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x75, 0x6e, 0x52,
	0x04, 0x72, 0x75, 0x6e, 0x73, 0x22, 0x74, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x52,
	0x75, 0x6e, 0x73, 0x42, 0x79, 0x50, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x75, 0x6e, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x75, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x6d, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x73, 0x42, 0x79, 0x50, 0x69, 0x73, 0x74, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72,
	0x75, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x75, 0x6e, 0x49,
	0x44, 0x12, 0x27, 0x0a, 0x07, 0x6a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x75,
	0x6e, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x73, 0x22, 0x2e, 0x0a, 0x12, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x40, 0x0a, 0x10, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x2f, 0x0a, 0x13,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x65, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x41, 0x0a,
	0x11, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x65, 0x70, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x22, 0x8f, 0x01, 0x0a, 0x03, 0x52, 0x75, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x69, 0x73, 0x74,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x69, 0x73, 0x74, 0x61,
	0x67, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65,
	0x6e, 0x64, 0x22, 0xce, 0x01, 0x0a, 0x06, 0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x50, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x50, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6c, 0x6f, 0x67, 0x32, 0x80, 0x06, 0x0a, 0x07, 0x50, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x12,
	0x46, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12,
	0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61,
	0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x56, 0x61,
	0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x65, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x56,
	0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x4b, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4f, 0x6e, 0x65, 0x77, 0x61, 0x79, 0x12, 0x1a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x50, 0x69, 0x73, 0x74,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x50, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x4f,
	0x6e, 0x65, 0x77, 0x61, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0b,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x1a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x50, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x50, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x30, 0x01, 0x12, 0x40, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x50, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x49, 0x0a,
	0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x12, 0x1b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x69, 0x73,
	0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x69, 0x73, 0x74, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52,
	0x75, 0x6e, 0x73, 0x42, 0x79, 0x50, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x75, 0x6e, 0x73, 0x42, 0x79, 0x50, 0x69,
	0x73, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x75, 0x6e, 0x73, 0x42, 0x79, 0x50, 0x69,
	0x73, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x73, 0x42, 0x79, 0x50, 0x69, 0x73, 0x74,
	0x61, 0x67, 0x65, 0x12, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x4a,
	0x6f, 0x62, 0x52, 0x75, 0x6e, 0x73, 0x42, 0x79, 0x50, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x73, 0x42, 0x79, 0x50, 0x69, 0x73, 0x74, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0b, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x4a, 0x6f, 0x62, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x46,
	0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x65, 0x70, 0x12, 0x1a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53,
	0x74, 0x65, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x65, 0x70, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x35, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x72, 0x75, 0x32,
	0x2f, 0x70, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_apiserver_grpc_proto_pistage_proto_rawDescOnce sync.Once
	file_apiserver_grpc_proto_pistage_proto_rawDescData = file_apiserver_grpc_proto_pistage_proto_rawDesc
)

func file_apiserver_grpc_proto_pistage_proto_rawDescGZIP() []byte {
	file_apiserver_grpc_proto_pistage_proto_rawDescOnce.Do(func() {
		file_apiserver_grpc_proto_pistage_proto_rawDescData = protoimpl.X.CompressGZIP(file_apiserver_grpc_proto_pistage_proto_rawDescData)
	})
	return file_apiserver_grpc_proto_pistage_proto_rawDescData
}

var file_apiserver_grpc_proto_pistage_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_apiserver_grpc_proto_pistage_proto_goTypes = []interface{}{
	(*SetVariablesRequest)(nil),        // 0: proto.SetVariablesRequest
	(*SetVariablesReply)(nil),          // 1: proto.SetVariablesReply
	(*GetVariablesRequest)(nil),        // 2: proto.GetVariablesRequest
	(*GetVariablesReply)(nil),          // 3: proto.GetVariablesReply
	(*ApplyPistageRequest)(nil),        // 4: proto.ApplyPistageRequest
	(*ApplyPistageOnewayReply)(nil),    // 5: proto.ApplyPistageOnewayReply
	(*ApplyPistageStreamReply)(nil),    // 6: proto.ApplyPistageStreamReply
	(*GetPistageRequest)(nil),          // 7: proto.GetPistageRequest
	(*GetPistageReply)(nil),            // 8: proto.GetPistageReply
	(*DeletePistageRequest)(nil),       // 9: proto.DeletePistageRequest
	(*DeletePistageReply)(nil),         // 10: proto.DeletePistageReply
	(*GetRunsByPistageRequest)(nil),    // 11: proto.GetRunsByPistageRequest
	(*GetRunsByPistageReply)(nil),      // 12: proto.GetRunsByPistageReply
	(*GetJobRunsByPistageRequest)(nil), // 13: proto.GetJobRunsByPistageRequest
	(*GetJobRunsByPistageReply)(nil),   // 14: proto.GetJobRunsByPistageReply
	(*RegisterJobRequest)(nil),         // 15: proto.RegisterJobRequest
	(*RegisterJobReply)(nil),           // 16: proto.RegisterJobReply
	(*RegisterStepRequest)(nil),        // 17: proto.RegisterStepRequest
	(*RegisterStepReply)(nil),          // 18: proto.RegisterStepReply
	(*Run)(nil),                        // 19: proto.Run
	(*JobRun)(nil),                     // 20: proto.JobRun
	nil,                                // 21: proto.SetVariablesRequest.VariablesEntry
	nil,                                // 22: proto.GetVariablesReply.VariablesEntry
	(*timestamppb.Timestamp)(nil),      // 23: google.protobuf.Timestamp
}
var file_apiserver_grpc_proto_pistage_proto_depIdxs = []int32{
	21, // 0: proto.SetVariablesRequest.variables:type_name -> proto.SetVariablesRequest.VariablesEntry
	22, // 1: proto.GetVariablesReply.variables:type_name -> proto.GetVariablesReply.VariablesEntry
	19, // 2: proto.GetRunsByPistageReply.runs:type_name -> proto.Run
	20, // 3: proto.GetJobRunsByPistageReply.jobRuns:type_name -> proto.JobRun
	23, // 4: proto.Run.start:type_name -> google.protobuf.Timestamp
	23, // 5: proto.Run.end:type_name -> google.protobuf.Timestamp
	23, // 6: proto.JobRun.start:type_name -> google.protobuf.Timestamp
	23, // 7: proto.JobRun.end:type_name -> google.protobuf.Timestamp
	0,  // 8: proto.Pistage.SetVariables:input_type -> proto.SetVariablesRequest
	2,  // 9: proto.Pistage.GetVariables:input_type -> proto.GetVariablesRequest
	4,  // 10: proto.Pistage.ApplyOneway:input_type -> proto.ApplyPistageRequest
	4,  // 11: proto.Pistage.ApplyStream:input_type -> proto.ApplyPistageRequest
	7,  // 12: proto.Pistage.GetPistage:input_type -> proto.GetPistageRequest
	9,  // 13: proto.Pistage.DeletePistage:input_type -> proto.DeletePistageRequest
	11, // 14: proto.Pistage.GetRunsByPistage:input_type -> proto.GetRunsByPistageRequest
	13, // 15: proto.Pistage.GetJobRunsByPistage:input_type -> proto.GetJobRunsByPistageRequest
	15, // 16: proto.Pistage.RegisterJob:input_type -> proto.RegisterJobRequest
	17, // 17: proto.Pistage.RegisterStep:input_type -> proto.RegisterStepRequest
	1,  // 18: proto.Pistage.SetVariables:output_type -> proto.SetVariablesReply
	3,  // 19: proto.Pistage.GetVariables:output_type -> proto.GetVariablesReply
	5,  // 20: proto.Pistage.ApplyOneway:output_type -> proto.ApplyPistageOnewayReply
	6,  // 21: proto.Pistage.ApplyStream:output_type -> proto.ApplyPistageStreamReply
	8,  // 22: proto.Pistage.GetPistage:output_type -> proto.GetPistageReply
	10, // 23: proto.Pistage.DeletePistage:output_type -> proto.DeletePistageReply
	12, // 24: proto.Pistage.GetRunsByPistage:output_type -> proto.GetRunsByPistageReply
	14, // 25: proto.Pistage.GetJobRunsByPistage:output_type -> proto.GetJobRunsByPistageReply
	16, // 26: proto.Pistage.RegisterJob:output_type -> proto.RegisterJobReply
	18, // 27: proto.Pistage.RegisterStep:output_type -> proto.RegisterStepReply
	18, // [18:28] is the sub-list for method output_type
	8,  // [8:18] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_apiserver_grpc_proto_pistage_proto_init() }
func file_apiserver_grpc_proto_pistage_proto_init() {
	if File_apiserver_grpc_proto_pistage_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_apiserver_grpc_proto_pistage_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetVariablesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiserver_grpc_proto_pistage_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetVariablesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiserver_grpc_proto_pistage_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVariablesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiserver_grpc_proto_pistage_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVariablesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiserver_grpc_proto_pistage_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyPistageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiserver_grpc_proto_pistage_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyPistageOnewayReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiserver_grpc_proto_pistage_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyPistageStreamReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiserver_grpc_proto_pistage_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPistageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiserver_grpc_proto_pistage_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPistageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiserver_grpc_proto_pistage_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePistageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiserver_grpc_proto_pistage_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePistageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiserver_grpc_proto_pistage_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRunsByPistageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiserver_grpc_proto_pistage_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRunsByPistageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiserver_grpc_proto_pistage_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobRunsByPistageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiserver_grpc_proto_pistage_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobRunsByPistageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiserver_grpc_proto_pistage_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiserver_grpc_proto_pistage_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterJobReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiserver_grpc_proto_pistage_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterStepRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiserver_grpc_proto_pistage_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterStepReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiserver_grpc_proto_pistage_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Run); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiserver_grpc_proto_pistage_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobRun); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_apiserver_grpc_proto_pistage_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_apiserver_grpc_proto_pistage_proto_goTypes,
		DependencyIndexes: file_apiserver_grpc_proto_pistage_proto_depIdxs,
		MessageInfos:      file_apiserver_grpc_proto_pistage_proto_msgTypes,
	}.Build()
	File_apiserver_grpc_proto_pistage_proto = out.File
	file_apiserver_grpc_proto_pistage_proto_rawDesc = nil
	file_apiserver_grpc_proto_pistage_proto_goTypes = nil
	file_apiserver_grpc_proto_pistage_proto_depIdxs = nil
}
